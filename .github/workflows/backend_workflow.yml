name: Backend Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'repos/backend/**'
  pull_request:
    types: [opened, reopened]

jobs:
  snyk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Snyk with npm
        run: npm install -g snyk

      - name: Install app dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r repos/backend/requirements.txt

      - name: Run auth snyk
        run: npx snyk test --file="./repos/backend/requirements.txt"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  unittests:
    runs-on: ubuntu-latest

    needs: snyk

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install app dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r repos/backend/requirements.txt

      - name: Run backend tests
        env:
          PYTHONPATH: repos/backend
        run: |
          python -m unittest repos/backend/src/tests.py

  deploy:
    if: contains(github.event.head_commit.message, '[backend]')

    runs-on: ubuntu-latest

    needs: unittests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Push Backend Docker Image
        run: |
          cd repos/backend
          docker build -t backend:latest .
          docker tag backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest

      - name: Configure AWS CLI with aws configure
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Deploy Backend to EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name my-eks-cluster
          kubectl apply -f ./k8s/backend-deployment.yml
